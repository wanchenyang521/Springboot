<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!--第一步 指明对应文件的Mapper类地址-->
<mapper namespace="com.wanchenyang.demo06mybatis01.mapper.UserMapper">
<!--    第二步 配置表结构和类的对应关系-->
    <resultMap id="BaseResultMap" type="com.wanchenyang.demo06mybatis01.model.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="userName" property="userName" jdbcType="VARCHAR"/>
        <result column="passWord" property="passWord" jdbcType="VARCHAR"/>
        <result column="user_sex" property="userSex" javaType="com.wanchenyang.demo06mybatis01.enums.UserSexEnum"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
    </resultMap>
<!--    这里为了了更好的贴近工作情况，将类的两个字段和数据库字段设置为不一致，其中一个使用了了枚举。
使用枚有⼀一个非常大的优点，插入此属性的数据会自动进行校验，如果不是枚举的内容会报错-->

    <sql id="Base_Column_List">
        id, userName, passWord, user_sex, nick_name
    </sql>

    <sql id="Base_Where_List">
        <if test="userName != null  and userName != ''">
            and userName = #{userName}
        </if>
        <if test="userSex != null and userSex != ''">
            and user_sex = #{userSex}
        </if>
    </sql>

<!--    查询所有-->
    <select id="getAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
    </select>

    <select id="getList" resultMap="BaseResultMap" parameterType="com.wanchenyang.demo06mybatis01.param.UserParam">
        select
        <include refid="Base_Column_List"/>
        from users
        where 1=1
        <include refid="Base_Where_List"/>
        order by id desc
        limit #{beginLine} , #{pageSize}
    </select>

    <select id="getCount" resultType="Integer" parameterType="com.wanchenyang.demo06mybatis01.param.UserParam">
        select
        count(1)
        from users
        where 1=1
        <include refid="Base_Where_List"/>
    </select>

<!--    parameterType属性完成输入类型映射-->
    <select id="getOne" parameterType="Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
        WHERE id = #{id}
    </select>

    <insert id="insert" parameterType="com.wanchenyang.demo06mybatis01.model.User">
        INSERT INTO
        users
        (userName,passWord,user_sex)
        VALUES
        (#{userName}, #{passWord}, #{userSex})
    </insert>

    <update id="update" parameterType="com.wanchenyang.demo06mybatis01.model.User">
        UPDATE
        users
        SET
        <if test="userName != null">userName = #{userName},</if>
        <if test="passWord != null">passWord = #{passWord},</if>
        nick_name = #{nickName}
        WHERE
        id = #{id}
    </update>

    <delete id="delete" parameterType="Long">
        DELETE FROM
        users
        WHERE
        id =#{id}
    </delete>

</mapper>